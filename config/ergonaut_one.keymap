#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
};

&mt {
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
    };

    behaviors {
        autoshift: autoshift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        turn_off_none_layer {
            bindings = <&tog 4>;
            key-positions = <13 14 15 16>;
            layers = <4>;
        };

        turn_on_none_layer {
            bindings = <&tog 4>;
            key-positions = <1 2 3 4>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 3 ESC             &autoshift LS(Q) Q  &autoshift LS(W) W  &autoshift LS(E) E  &autoshift LS(R) R  &autoshift LS(T) T      &autoshift LS(Y) Y  &autoshift LS(U) U  &autoshift LS(I) I          &autoshift LS(O) O      &autoshift LS(P) P                  &autoshift LS(LBKT) LBKT
&mt LEFT_SHIFT TAB    &autoshift LS(A) A  &autoshift LS(S) S  &autoshift LS(D) D  &autoshift LS(F) F  &autoshift LS(G) G      &autoshift LS(H) H  &autoshift LS(J) J  &autoshift LS(K) K          &autoshift LS(L) L      &autoshift LS(SEMICOLON) SEMICOLON  &autoshift LS(SINGLE_QUOTE) SINGLE_QUOTE
&mt LEFT_CONTROL F18  &autoshift LS(Z) Z  &autoshift LS(X) X  &autoshift LS(C) C  &autoshift LS(V) V  &autoshift LS(B) B      &autoshift LS(N) N  &autoshift LS(M) M  &autoshift LS(COMMA) COMMA  &autoshift LS(DOT) DOT  &autoshift LS(SLASH) SLASH          &lt 3 F17
                                                              &kp LCMD            &lt 1 SPACE         &mt LEFT_ALT BACKSPACE  &mt LEFT_ALT ENTER  &lt 2 SPACE         &kp RIGHT_GUI
            >;
        };

        lower_layer {
            bindings = <
&kp ENTER    &kp N1                      &kp N2             &kp N3           &kp N4                &kp N5                &kp N6                      &kp N7                      &kp N8                                    &kp N9                                      &kp N0                              &autoshift LS(MINUS) MINUS
&kp LS(TAB)  &kp EXCL                    &kp AT             &kp HASH         &kp DLLR              &kp PRCNT             &kp CARET                   &kp AMPS                    &kp STAR                                  &kp LPAR                                    &kp RPAR                            &kp UNDERSCORE
&trans       &autoshift LS(GRAVE) GRAVE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &autoshift LS(EQUAL) EQUAL  &autoshift LS(SLASH) SLASH  &autoshift LS(LEFT_BRACKET) LEFT_BRACKET  &autoshift LS(RIGHT_BRACKET) RIGHT_BRACKET  &autoshift LS(BACKSLASH) BACKSLASH  &kp F18
                                                            &trans           &trans                &trans                &trans                      &trans                      &trans
            >;
        };

        raise_layer {
            bindings = <
&trans          &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &none         &kp LA(LEFT)      &kp UP    &kp LA(RIGHT)      &kp F11        &kp F12
&kp LEFT_SHIFT  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &kp LG(LEFT)  &kp LEFT          &kp DOWN  &kp RIGHT          &kp LG(RIGHT)  &none
&trans          &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT    &none         &kp LS(LA(LEFT))  &none     &kp LS(LA(RIGHT))  &none          &kp F18
                                            &trans     &trans     &trans        &trans        &trans            &trans
            >;
        };

        adjust_layer {
            bindings = <
&none       &none         &none         &none         &none         &none         &none         &none         &none                  &none                      &none         &bootloader
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2           &bt BT_SEL 1               &bt BT_SEL 0  &bt BT_CLR
&sys_reset  &bootloader   &none         &none         &none         &kp N5        &kp N6        &none         &kp LA(RIGHT_BRACKET)  &kp LS(LA(RIGHT_BRACKET))  &none         &sys_reset
                                        &trans        &none         &trans        &none         &trans        &trans
            >;
        };

        none_layer {
            bindings = <
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &kp G  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
                     &none  &none  &none  &none  &none  &none
            >;
        };
    };
};
